use "std/conv"
use "std/os"

fn isSymmetric(matrix: [][]int, size: int): bool {
	mut i := 0
	for i < size; i++ {
		mut j := 0
		for j < i; j++ {
			if (matrix[i][j] != matrix[j][i]) {
				ret false
			}
		}
	}
	ret true
}

fn main() {
	print("Enter the number of rows of the matrix: ")
	row := conv::Atoi(os::Stdin().ReadLine()!)!

	print("Enter the number of columns of the matrix: ")
	column := conv::Atoi(os::Stdin().ReadLine()!)!

	mut matrix := make([][]int, row)
	for i in matrix {
		matrix[i] = make([]int, column)
	}

	print("\nEnter the matrix:\n")
	mut i := 0
	for i < row; i++ {
		print("Row ")
		print(i + 1)
		print(":\n")
		mut j := 0
		for j < column; j++ {
			matrix[i][j] = conv::Atoi(os::Stdin().ReadLine()!)!
		}
	}

	println("\nMatrix:")
	i = 0
	for i < row; i++ {
		mut j := 0
		for j < column; j++ {
			print(matrix[i][j])
			print(" ")
		}
		print("\n")
	}
	print("\n")

	if (row != column) {
		print("It is not a symmetric matrix.")
	} else {
		result := isSymmetric(matrix, row)
		if (result == true) {
			print("Is is a symmetric matrix.")
		} else {
			print("It is not a symmetric matrix.")
		}
	}
}
